generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String       @id @default(uuid())
  username    String       @unique
  email       String       @unique
  password    String
  profilePicture String?
  bio         String?
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  posts       Post[]
  comments    Comment[]
  sentFriendships Friendship[] @relation(name: "SenderFriends")
  receivedFriendships Friendship[] @relation(name: "ReceiverFriends")
  likes       Like[]
  notifications Notification[]
}

model Post {
  id          String       @id @default(uuid())
  content     String
  imageUrl    String?
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  authorId    String
  author      User         @relation(fields: [authorId], references: [id])
  comments    Comment[]
  likes       Like[]
}

model Comment {
  id          String       @id @default(uuid())
  content     String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @default(now())
  postId      String
  post        Post         @relation(fields: [postId], references: [id])
  userId      String
  user        User         @relation(fields: [userId], references: [id])
}

model Like {
  id          String       @id @default(uuid())
  userId      String
  postId      String
  createdAt   DateTime     @default(now())
  user        User         @relation(fields: [userId], references: [id])
  post        Post         @relation(fields: [postId], references: [id])
}

model Friendship {
  id          String       @id @default(uuid())
  senderId    String
  receiverId  String
  status      FriendshipStatus @default(PENDING)
  createdAt   DateTime     @default(now())
  sender      User         @relation(name: "SenderFriends", fields: [senderId], references: [id])
  receiver    User         @relation(name: "ReceiverFriends", fields: [receiverId], references: [id])
}

model Notification {
  id          String       @id @default(uuid())
  type        NotificationType
  message     String
  userId      String
  createdAt   DateTime     @default(now())
  user        User         @relation(fields: [userId], references: [id])
}

enum FriendshipStatus {
  PENDING
  ACCEPTED
  REJECTED
}

enum NotificationType {
  LIKE
  COMMENT
  FRIEND_REQUEST
}